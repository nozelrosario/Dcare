app.classes.data.DataStore = new Class({
    initialize: function(config) {
        this.dataStoreName = (config.dataStoreName)? config.dataStoreName: logger.error("DataStore Name cannot be empty"),
		this.dataAdapter = (config.dataAdapter)? config.dataAdapter: "pouchDB",
		this.adapterConfig = (config.adapterConfig)? config.adapterConfig: "";
		this.dataStoreAdapter = null;
    },

    getDataStore: function() {
        if (!this.dataStoreAdapter) {
            this.dataStoreAdapter = DataAdapterFactory.getAdapter(this.dataAdapter, this.adapterConfig);
            this.dataStoreAdapter.openDataStore(this.dataStoreName);
		}
        return this.dataStoreAdapter;
	},
	/*
    * Saves Data object into DB
    * If data contains a id, existing is updated, else a new entry is created with autogenerated ID
    */
    save : function (data) {
        return this.getDataStore().save(data);
    },
	query: function() {
	},
	getDataByID: function(id) {
		return this.getDataStore().getDataByID(id);
	},
	getRowsCount: function() {
		return this.getDataStore().getRowsCount();
	},
	getAllRows: function() {
		return this.getDataStore().getAllRows();
	},
	search : function (query) {
		return this.getDataStore().search(query);
    },
    find : function (query) {
		return this.getDataStore().find(query);
    }
	
});

//Define an Alias for Data Store for quick Access.
var DataStore = app.classes.data.DataStore;